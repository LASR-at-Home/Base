#!/usr/bin/env python3

import rospy
import actionlib


from qualification.msg import IdentifyAction, IdentifyResult
from lasr_vision_msgs.srv import Recognise, RecogniseRequest

from sensor_msgs.msg import Image


class Identify:

    def __init__(self):

        self.recognise = rospy.ServiceProxy("/recognise", Recognise)
        self.recognise.wait_for_service()
        rospy.loginfo("got recognise")
        self._action_server = actionlib.SimpleActionServer(
            "identify",
            IdentifyAction,
            execute_cb=self.execute_cb,
            auto_start=False,
        )

        self._action_server.start()

    def execute_cb(self, _):
        rospy.loginfo("Identifying!")
        img_msg = rospy.wait_for_message("/xtion/rgb/image_raw", Image)
        req = RecogniseRequest()
        req.image_raw = img_msg
        req.dataset = "qualification"
        req.confidence = 0.7
        resp = self.recognise(req)
        print(resp)
        print(resp.detections)
        result = IdentifyResult()
        if resp.detections:
            result.name = resp.detections[0].name
            result.success = True
        else:
            result.success = False

        self._action_server.set_succeeded(result)


if __name__ == "__main__":
    rospy.init_node("identify")
    Identify()
    rospy.spin()
