#!/usr/bin/env python3
import rospy
from lasr_speech.srv import Speech, SpeechResponse
from lasr_rasa.srv import Rasa
from lasr_speech_recognition_common.msg import Transcription

class TranscribeAndParse:

    def __init__(self):
        rospy.wait_for_service("/lasr_rasa/parse")
        self.rasa = rospy.ServiceProxy("/lasr_rasa/parse", Rasa)
        self.transcription_topic = "/transcription"

    def __call__(self, req):
        while True:
            transcription = rospy.wait_for_message(self.transcription_topic, Transcription)
            print(transcription)
            if transcription.finished:
                rasa_response = self.rasa(transcription.phrase)
                return SpeechResponse(rasa_response.json_response, rasa_response.success)

if __name__ == "__main__":
    rospy.init_node("lasr_speech")
    worker = TranscribeAndParse()
    rospy.Service("/lasr_speech/transcribe_and_parse", Speech, worker)
    rospy.spin()
