#!/usr/bin/env python3

import sys
import rospy
import threading

from sensor_msgs.msg import Image

from lasr_vision_msgs.srv import Recognise, RecogniseRequest

if len(sys.argv) < 3:
    print("Usage: rosrun lase_recognition relay <source_topic> <dataset>")
    exit()

listen_topic = sys.argv[1]
dataset = sys.argv[2]

processing = False


def detect(image):
    global processing
    processing = True
    rospy.loginfo("Received image message")

    try:
        detect_service = rospy.ServiceProxy("/recognise", Recognise)
        req = RecogniseRequest()
        req.image_raw = image
        req.dataset = dataset
        req.confidence = 0.4
        resp = detect_service(req)
        print(resp)
    except rospy.ServiceException as e:
        rospy.logerr("Service call failed: %s" % e)
    finally:
        processing = False


def image_callback(image):
    global processing
    if processing:
        return

    t = threading.Thread(target=detect, args=(image,))
    t.start()


def listener():
    rospy.init_node("image_listener", anonymous=True)
    rospy.wait_for_service("/recognise")
    rospy.Subscriber(listen_topic, Image, image_callback)
    rospy.spin()


if __name__ == "__main__":
    listener()
