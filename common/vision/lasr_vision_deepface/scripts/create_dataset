#!/usr/bin/env python3

import sys
import lasr_vision_deepface as face_recognition

if len(sys.argv) < 3:
    print(
        "usage: rosrun lasr_vision_deepface create_dataset.py <topic> <dataset> <name> [size=50]"
    )
    exit(0)

topic = sys.argv[1]
dataset = sys.argv[2]
name = sys.argv[3]

if len(sys.argv) > 4:
    size = int(sys.argv[4])
else:
    size = 50

import rospy
import rospkg
from sensor_msgs.msg import Image
import os
import cv2_img
import cv2

DATASET_ROOT = os.path.join(
    rospkg.RosPack().get_path("lasr_vision_deepface"), "datasets"
)
DATASET_PATH = os.path.join(DATASET_ROOT, dataset, name)
if not os.path.exists(DATASET_PATH):
    os.makedirs(DATASET_PATH)

rospy.init_node("create_dataset")
rospy.loginfo(f"Taking {size} pictures of {name} and saving to {DATASET_PATH}")

for i in range(size):
    img_msg = rospy.wait_for_message(topic, Image)
    cv_im = cv2_img.msg_to_cv2_img(img_msg)
    face_cropped_cv_im = face_recognition.detect_face(cv_im)
    if face_cropped_cv_im is None:
        continue
    cv2.imwrite(os.path.join(DATASET_PATH, f"{name}_{i+1}.png"), face_cropped_cv_im)
    rospy.loginfo(f"Took picture {i+1}")
