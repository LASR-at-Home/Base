Bootstrap: docker
From: ros:humble

%post -c /bin/bash
export ROS_DISTRO=humble

# Install deps
apt update
export DEBIAN_FRONTEND=noninteractive
apt upgrade -y
apt install ros-$ROS_DISTRO-xacro -y # missing dependency
apt install ros-$ROS_DISTRO-rqt* -y # missing dependency
apt install ros-$ROS_DISTRO-usb-cam -y # to test camera
apt install terminator wget git inetutils-ping -y
apt install python3-pip -y

apt install unzip
apt install -y ros-humble-image-pipeline 
apt install -y ros-humble-rqt-image-view
apt install -y ros-humble-v4l2-camera
apt install -y libcanberra-gtk3-module 

# Dependencies for tf_pcl
apt install ros-$ROS_DISTRO-sensor-msgs-py -y

# Dependencies for Whisper
apt install ffmpeg portaudio19-dev alsa-utils -y
# pip install -r $PWD/common/speech/lasr_speech_recognition_whisper/requirements.txt

# dependency of web camera (for laptops)
sudo apt install ros-humble-v4l2-camera

# Dependencies for BodyPixKeypoint
# pip install -r $PWD/common/vision/lasr_vision_bodypix/requirements.txt

echo "Installing Python dependencies..."
for package in \
    certifi==2024.2.2 \
    cffi==1.16.0 \
    charset-normalizer==3.3.2 \
    filelock==3.14.0 \
    fsspec==2024.3.1 \
    idna==3.7 \
    jinja2==3.1.4 \
    llvmlite==0.42.0 \
    markupsafe==2.1.5 \
    more-itertools==10.2.0 \
    mpmath==1.3.0 \
    networkx==3.3 \
    numba==0.59.1 \
    numpy==1.26.4 \
    nvidia-cublas-cu12==12.1.3.1 \
    nvidia-cuda-cupti-cu12==12.1.105 \
    nvidia-cuda-nvrtc-cu12==12.1.105 \
    nvidia-cuda-runtime-cu12==12.1.105 \
    nvidia-cudnn-cu12==8.9.2.26 \
    nvidia-cufft-cu12==11.0.2.54 \
    nvidia-curand-cu12==10.3.2.106 \
    nvidia-cusolver-cu12==11.4.5.107 \
    nvidia-cusparse-cu12==12.1.0.106 \
    nvidia-nccl-cu12==2.20.5 \
    nvidia-nvjitlink-cu12==12.4.127 \
    nvidia-nvtx-cu12==12.1.105 \
    openai-whisper==20231117 \
    pyaudio==0.2.13 \
    pycparser==2.22 \
    pyyaml==6.0.1 \
    regex==2024.4.28 \
    requests==2.31.0 \
    six==1.16.0 \
    sounddevice==0.4.6 \
    speechrecognition==3.10.0 \
    sympy==1.12 \
    tiktoken==0.6.0 \
    torch==2.3.0 \
    tqdm==4.66.4 \
    triton==2.3.0 \
    typing-extensions==4.11.0 \
    urllib3==2.2.1 \
    absl-py==2.1.0 \
    astunparse==1.6.3 \
    certifi==2024.7.4 \
    chex==0.1.86 \
    contourpy==1.2.1 \
    cycler==0.12.1 \
    etils[epath,epy]==1.5.2 \
    flatbuffers==24.3.25 \
    flax==0.8.5 \
    fonttools==4.53.1 \
    fsspec==2024.6.1 \
    gast==0.6.0 \
    google-pasta==0.2.0 \
    grpcio==1.64.1 \
    h5py==3.11.0 \
    idna==3.7 \
    importlib-metadata==8.0.0 \
    importlib-resources==6.4.0 \
    jax==0.4.30 \
    jaxlib==0.4.30 \
    keras==3.4.1 \
    kiwisolver==1.4.5 \
    libclang==18.1.1 \
    markdown==3.6 \
    markdown-it-py==3.0.0 \
    markupsafe==2.1.5 \
    matplotlib==3.8.1 \
    mdurl==0.1.2 \
    ml-dtypes==0.3.2 \
    msgpack==1.0.8 \
    namex==0.0.8 \
    nest-asyncio==1.6.0 \
    numpy==1.26.4 \
    opencv-python==4.8.1.78 \
    opt-einsum==3.3.0 \
    optax==0.2.2 \
    optree==0.12.1 \
    orbax-checkpoint==0.5.20 \
    packaging==23.2 \
    pandas==2.2.2 \
    pillow==10.1.0 \
    protobuf==4.25.3 \
    pygments==2.18.0 \
    pyparsing==3.1.2 \
    python-dateutil==2.9.0.post0 \
    pytz==2024.1 \
    requests==2.32.3 \
    rich==13.7.1 \
    scipy==1.13.1 \
    tensorboard==2.16.2 \
    tensorflow==2.16.2 \
    tensorflow-decision-forests==1.9.1 \
    tensorflow-hub==0.16.1 \
    tensorflow-io-gcs-filesystem==0.37.1 \
    tensorflowjs==4.20.0 \
    tensorstore==0.1.63 \
    termcolor==2.4.0 \
    tf-bodypix==0.4.2 \
    tf-keras==2.16.0 \
    tfjs-graph-converter==1.6.3 \
    toolz==0.12.1 \
    typing-extensions==4.12.2 \
    tzdata==2024.1 \
    urllib3==2.2.2 \
    werkzeug==3.0.3 \
    wheel==0.43.0 \
    wrapt==1.16.0 \
    wurlitzer==3.1.1 \
    ydf==0.5.0 \
    zipp==3.19.2 \
    ros2_numpy==0.0.5; do
    pip install $package || echo "Failed to install $package, skipping..."
done

rm -f /etc/ros/rosdep/sources.list.d/20-default.list
rosdep init
rosdep update

# Install and build PAL opensource packages
source /opt/ros/$ROS_DISTRO/setup.bash

mkdir -p /opt/tiago_public_ws/src
cd /opt/tiago_public_ws
vcs import --input https://raw.githubusercontent.com/pal-robotics/tiago_tutorials/humble-devel/tiago_public.repos src
rosdep install --from-paths src -y --ignore-src --rosdistro humble
colcon build --symlink-install
echo "source /opt/tiago_public_ws/install/setup.bash" >> /opt/env.sh

mkdir -p /opt/robocup_ws/src
cd /opt/robocup_ws/src
git clone https://github.com/ros/executive_smach.git
cd executive_smach
git checkout ros2
cd /opt/robocup_ws
colcon build
echo "source /opt/robocup_ws/install/setup.bash" >> /opt/env.sh

echo "if [ -f "\$HOME/.tiagorc" ]; then
    . \$HOME/.tiagorc
fi" >> /opt/env.sh

echo "export PS1=\"(\[\033[31m\]\"\\\${ROS_MASTER_URI:7:-6}\"\[\033[0m\]) \[\033[01;32m\]Apptainer\[\033[00m\]:\[\033[01;33m\]\w\[\033[00m\]> \"" >> /.singularity.d/env/99-base.sh

echo "echo 'I am in Apptainer/Singularity! (Built on $(date +'%d/%m/%Y %H:%M %Z'))'" >> /opt/env.sh

# Fix users: https://groups.google.com/a/lbl.gov/g/singularity/c/FjaOxbeZJn0?pli=1
sed -i 's/^\(user:x:\).*\(::.*\)/\11005:1005\2/g' /etc/passwd

#### Terminator config
echo -e "alias terminator='terminator -u --config /opt/terminator_config --title \"TIAGo $ROS_DISTRO Apptainer\" &>/dev/null &'" >> /opt/env.sh
echo "export PROMPT_COMMAND='echo -en \"\033]0; Apptainer:\$(dirs)\a\"'" >> /opt/env.sh # Sets the split title in terminator to be the prompt (as it usually is)

cat <<EOF > /opt/terminator_config
[global_config]
#title_transmit_bg_color = "#4e9a06" # Green
#title_transmit_bg_color = "#c4a000"  # Yellow
title_transmit_bg_color = "#ce5c00"  # Orange
window_state = maximise
[keybindings]
[layouts]
[[default]]
    [[[child1]]]
    parent = window0
    profile = default
    type = Terminal
    [[[window0]]]
    parent = ""
    type = Window
[plugins]
[profiles]
[[default]]
    cursor_color = "#aaaaaa"
    scrollback_infinite = True
    custom_command = bash --init-file /opt/env.sh
    use_custom_command = True
EOF
####

%runscript
#!/bin/bash
if [ $# -eq 1 ]; then
    if [[ $1 = "terminator" ]]; then
        echo "Running terminator. This terminal will be unresponsive until terminator is closed."
        exec terminator -u --config /opt/terminator_config --title "TIAGo $ROS_DISTRO OS Apptainer" &>/dev/null
    else
        exec bash --init-file /opt/env.sh
    fi
else
    exec bash --init-file /opt/env.sh
fi

%help
Apptainer/Singularity image for simulating TIAGo in ROS2 Humble.

Usage:
  apptainer run --nv --nvccli <terminator>
  
  Suffixing with "terminator" launches terminator inside the container.

Useful built-in commands:
  - terminator - Starts a terminator instance from inside the container, so all splits will already have loaded the container.

In order to load your own aliases, you can create a file called .tiagorc in $HOME (so in $HOME/.tiagorc) and this will be loaded when you load the container.
